# @package _global_

# This configuration file can be used to run a grid search experiment to
# find a suitable learning rate schedule (step size & decay parameter of
# the StepLR scheduler) for training the LeNet-5 model on the
# FashionMNIST dataset.
#
# To run this experiment, execute the following command from the
# "thesis-experiments/src/" directory:
#
#   >>> python train_classifier.py experiment=lenet_fashionmnist/grid_search/lr_schedule
#


# -----------------------
# MULTI-RUN CONFIGURATION
# -----------------------

experiment:
  name: lenet_fashionmnist/grid_search/lr_schedule
  dir:  ../out/${experiment.name}/${now:%Y-%m-%d_%H-%M-%S}
  sub_dir: step_size=${main_scheduler.lr_step_size},gamma=${main_scheduler.lr_gamma}

paths:
  checkpoints: ${experiment.dir}/${experiment.sub_dir}/checkpoints
  tensorboard: ${experiment.dir}/${experiment.sub_dir}/tensorboard

hydra:
  mode: MULTIRUN
  sweep:
    dir: ${experiment.dir}
    subdir: ${experiment.sub_dir}/logs
  sweeper:
    params:
      main_scheduler.lr_step_size: 10, 20, 30, 40, 50
      main_scheduler.lr_gamma: 0.1, 0.5, 0.9


# ---------------------
# GENERAL CONFIGURATION
# ---------------------

defaults:
  - override /model: lenet
  - override /dataset: fashionmnist
  - override /transform/train: basic_augmentation
  - override /main_scheduler: step_lr
  - _self_

reproducibility:
  torch_seed: 89
  shuffle_seed: 858

training:
  num_epochs: 200

transform:
  train:
    crop_scale:
      lower: 0.8  # based on "random_cropping.yaml"
      upper: 1.0
    crop_ratio:
      lower: 1.0
      upper: 1.0
  val:
    resize_size: ${model.input_size}

dataloader:
  val_split: 0.20
  batch_size: 64  # based on "batch_size_lr.yaml"
  num_workers: 4

optimizer:
  lr: 0.01  # based on "batch_size_lr.yaml"
  momentum: 0.8  # based on "momentum_wd.yaml"
  weight_decay: 1e-3  # based on "momentum_wd.yaml" & "horizontal_flipping.yaml"

performance:
  patience: 20
