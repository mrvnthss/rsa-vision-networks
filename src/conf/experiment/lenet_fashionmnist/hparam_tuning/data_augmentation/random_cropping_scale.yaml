# @package _global_

# This configuration file can be used to run a control experiment on the
# lower bound of the crop scale parameter used to train the LeNet-5
# model on the FashionMNIST dataset.
#
# To run this experiment, execute the following command from the
# "thesis-experiments/src/" directory:
#
#   >>> python train_classifier.py experiment=lenet_fashionmnist/hparam_tuning/data_augmentation/random_cropping_scale
#


# -----------------------
# MULTI-RUN CONFIGURATION
# -----------------------

experiment:
  name: lenet_fashionmnist/hparam_tuning/data_augmentation/random_cropping_scale
  dir:  ../out/${experiment.name}/${now:%Y-%m-%d_%H-%M-%S}
  sub_dir: crop_scale.lower=${transform.train.crop_scale.lower},b=${dataloader.batch_size},momentum=${optimizer.momentum}

paths:
  checkpoints: ${experiment.dir}/${experiment.sub_dir}/checkpoints
  tensorboard: ${experiment.dir}/${experiment.sub_dir}/tensorboard

hydra:
  mode: MULTIRUN
  sweep:
    dir: ${experiment.dir}
    subdir: ${experiment.sub_dir}/logs
  sweeper:
    params:
      transform.train.crop_scale.lower: 0.2, 0.4  # lower values than "random_cropping.yaml"
      dataloader.batch_size: 64, 128  # same as "random_cropping.yaml"
      optimizer.momentum: 0.8, 0.85  # same as "random_cropping.yaml"


# ---------------------
# GENERAL CONFIGURATION
# ---------------------

defaults:
  - override /model: lenet
  - override /dataset: fashionmnist
  - override /transform/train: basic_augmentation
  - _self_

reproducibility:
  torch_seed: 89
  shuffle_seed: 858

training:
  num_epochs: 200  # same as "random_cropping.yaml"

transform:
  train:
    crop_scale:
      upper: 1.0
    crop_ratio:
      lower: 1.0
      upper: 1.0
  val:
    resize_size: ${model.input_size}

dataloader:
  val_split: 0.20
  num_workers: 4

optimizer:
  lr: 0.01  # based on "batch_size_lr.yaml"
  weight_decay: 1e-3  # based on "momentum_wd.yaml" & "horizontal_flipping.yaml"

performance:
  patience: 20
